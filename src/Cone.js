//generated by copilot

class Cone {
    constructor() {
        this.type = 'cone';
        this.color = [1.0, 1.0, 1.0, 1.0];
        this.matrix = new Matrix4();
        this.segments = 20; 
    }

    render() {
        var rgba = this.color;

        gl.uniform4f(u_FragColor, rgba[0], rgba[1], rgba[2], rgba[3]);
        gl.uniformMatrix4fv(u_ModelMatrix, false, this.matrix.elements);

        let angleStep = (2 * Math.PI) / this.segments;
        for (let i = 0; i < this.segments; i++) {
            let angle1 = i * angleStep;
            let angle2 = (i + 1) * angleStep;

            let x1 = Math.cos(angle1);
            let y1 = Math.sin(angle1);
            let x2 = Math.cos(angle2);
            let y2 = Math.sin(angle2);

            drawTriangle3D([
                0.0, 0.0, 0.0, 
                x1, y1, 0.0,
                x2, y2, 0.0 
            ]);
        }

        for (let i = 0; i < this.segments; i++) {
            let angle1 = i * angleStep;
            let angle2 = (i + 1) * angleStep;

            let x1 = Math.cos(angle1);
            let y1 = Math.sin(angle1);
            let x2 = Math.cos(angle2);
            let y2 = Math.sin(angle2);

            drawTriangle3D([
                0.0, 0.0, 1.0, 
                x1, y1, 0.0,   
                x2, y2, 0.0   
            ]);
        }
    }
}